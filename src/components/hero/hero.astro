---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import Markdown from "../utility/markdown.astro";

interface Props {
  background_image: {
    image_path: string;
    alt_text: string;
  }
  heading: {
    heading_text: string;
    heading_color: string;
  };
  subheading: {
    markdown_content: string;
    color: string;
  };
  buttons: [
    {
      _bookshop_name: string;
      text: string;
      link: string;
      background_color?: string;
      hover_brightness: number;
      text_color: string;
    },
  ];
}

const block = Astro.props;
const buttons = import.meta.glob("/src/components/buttons/**/*.astro", {
  eager: true,
});
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png,gif,webp}",
  { eager: true }
);

// Extract image URLS from image metadeta
const getImageUrl= (path: string) => {
  const image = images[path];
  return image ? image.default.src : path;
};

const backgroundImageSrc = getImageUrl(block.background_image.image_path);
---

<section id="hero-219">
  <div class="cs-container">
      <h2 class="cs-title"  style={`color: ${block.heading.heading_color};`}>{block.heading.heading_text}</h2>
      <p class="cs-text" style={`color: ${block.subheading.color};`}>
         {block.subheading.markdown_content}
      </p>
      <div class="buttons">
        {
          block.buttons.map((button) => {
            const name = button._bookshop_name.split("/").reverse()[0];
            const filePath = `/src/components/buttons/${name}/${name}.astro`;
            const Component = (buttons[filePath] as any)?.default;
            return <Component {...button} />;
          })
        }
      </div>
  </div>

  <!-- Background Image -->
  <picture class="cs-background">
      <source media="(max-width: 600px)" srcset={backgroundImageSrc}>
      <source media="(min-width: 601px)" srcset={backgroundImageSrc}>
      <img decoding="async" src={backgroundImageSrc} alt={block.background_image.alt_text} width="2250" height="1500" aria-hidden="true">
  </picture>
</section>

<style>
  /*-- -------------------------- -->
  <---           Hero             -->
  <--- -------------------------- -*/
  
  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
      #hero-219 {
          /* Centers button */
          text-align: left;
          /* 144px - 300px - leaving extra space for the navigation */
          padding: clamp(9rem, 25.95vw, 10.75rem) 1rem 0;
          /* 130px - 200px */
          padding-bottom: clamp(8.125rem, 12.5vw, 25rem);
          position: relative;
          z-index: 1;
      }
      #hero-219 .cs-background {
          width: 100%;
          height: 100%;
          display: block;
          position: absolute;
          top: 0;
          left: 0;
          z-index: -2;
      }
      #hero-219 .cs-background:before {
          /* Overlay */
          content: "";
          width: 100%;
          height: 100%;
          background: #000;
          opacity: 0.7;
          position: absolute;
          display: block;
          top: 0;
          left: 0;
          z-index: 1;
          /* prevents the cursor from interacting with it */
          pointer-events: none;
      }
      #hero-219 .cs-background img {
          position: absolute;
          top: 0;
          left: 0;
          height: 100%;
          width: 100%;
          object-fit: cover;
      }
      #hero-219 .cs-container {
          width: 100%;
          max-width: 80rem;
          margin: auto;
      }
      #hero-219 .cs-title {
          font-family: 'Exo Variable', sans-serif;
          text-transform: uppercase;
          /* 39px - 61px */
          font-size: clamp(2.4375rem, 6.4vw, 3rem);
          font-weight: 700;
          line-height: 1.2em;
          text-align: left;
          max-width: 38.8125rem;
          /* 16px - 24px */
          margin: 0 auto clamp(1rem, 4vw, 1.5rem) 0;
          color: #fff;
          position: relative;
      }
      #hero-219 .cs-text {
          /* 16px - 20px */
          font-size: clamp(1rem, 1.95vw, 1.25rem);
          line-height: 1.5em;
          text-align: left;
          width: 100%;
          /* 464px - 622px */
          max-width: clamp(29rem, 60vw, 38.785rem);
          margin: 0 auto 0 0;
          /* 40px - 48px */
          margin-bottom: clamp(2.5rem, 4vw, 3rem);
          color: #fff;
      }
      #hero-219 .cs-button-solid {
          font-size: 1rem;
          line-height: 3.5rem;
          text-decoration: none;
          font-weight: 700;
          margin: auto;
          color: #fff;
          padding: 0 1.5rem;
          background-color: var(--primary);
          border-radius: 0.25rem;
          display: inline-block;
          position: relative;
          z-index: 1;
      }
      #hero-219 .cs-button-solid:before {
          content: "";
          position: absolute;
          display: block;
          height: 100%;
          width: 0%;
          background: #000;
          opacity: 1;
          top: 0;
          left: 0;
          z-index: -1;
          border-radius: 0.25rem;
          transition: width 0.3s;
      }
      #hero-219 .cs-button-solid:hover:before {
          width: 100%;
      }
  }
  
                                    
  </style>   